"""
Interface visual para teste manual do verificador de processos.
Permite inserir dados via JSON e visualizar resultados de forma intuitiva.
"""
import streamlit as st
import requests
import json

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Verificador de Processos",
    page_icon="‚öñÔ∏è",
    layout="wide"
)

# T√≠tulo e descri√ß√£o
st.title("‚öñÔ∏è Verificador de Processos Judiciais")
st.markdown("""
**Analise automaticamente processos judiciais usando IA**  
Insira os dados do processo em JSON e receba uma decis√£o baseada nas pol√≠ticas da empresa.
""")

# Sidebar com informa√ß√µes
with st.sidebar:
    st.header("‚ÑπÔ∏è Como usar")
    st.markdown("""
    1. Cole os dados do processo em JSON no campo abaixo
    2. Clique em **Analisar Processo** 
    3. Veja a decis√£o automatizada com justificativa
    """)
    
    st.header("üìã Pol√≠ticas Aplicadas")
    st.markdown("""
    - POL-1: Tr√¢nsito em julgado obrigat√≥rio
    - POL-2: Valor de condena√ß√£o informado
    - POL-3: Valor ‚â• R$ 1.000,00
    - POL-4: N√£o trabalhista
    - POL-5: Sem √≥bito do autor
    - POL-6: Sem substabelecimento
    - POL-8: Documenta√ß√£o completa
    """)

# √Årea principal da aplica√ß√£o
col1, col2 = st.columns([2, 1])

with col1:
    st.subheader("üì• Dados do Processo")
    
    # Campo para entrada de dados
    processo_json = st.text_area(
        "Cole o JSON do processo aqui:",
        height=400,
        placeholder='{"numeroProcesso": "0001234-56.2023.4.05.8100", "classe": "...", ...}'
    )

with col2:
    st.subheader("üéØ Resultado")
    
    # Bot√£o de an√°lise
    if st.button("üîç Analisar Processo", type="primary", use_container_width=True):
        if processo_json:
            try:
                # Valida e parseia JSON
                dados_processo = json.loads(processo_json)
                
                # Mostra spinner durante a an√°lise
                with st.spinner("Analisando processo com IA..."):
                    response = requests.post(
                        "http://localhost:8000/analyze", 
                        json=dados_processo,
                        timeout=30
                    )
                
                if response.status_code == 200:
                    resultado = response.json()
                    
                    # Exibe resultado com formata√ß√£o visual
                    st.success("‚úÖ An√°lise conclu√≠da!")
                    
                    # Card de decis√£o colorido
                    decision_color = {
                        "approved": "üü¢ APROVADO",
                        "rejected": "üî¥ REJEITADO", 
                        "incomplete": "üü° INCOMPLETO"
                    }
                    
                    st.markdown(f"### {decision_color.get(resultado['decision'], '‚ö™')}")
                    st.markdown(f"**Justificativa:** {resultado['rationale']}")
                    
                    # Pol√≠ticas citadas
                    st.markdown("**Pol√≠ticas aplicadas:**")
                    for citation in resultado.get('citations', []):
                        st.code(citation)
                        
                    # JSON completo (expans√≠vel)
                    with st.expander("Ver resposta completa em JSON"):
                        st.json(resultado)
                        
                else:
                    st.error(f"‚ùå Erro na API: {response.status_code} - {response.text}")
                    
            except json.JSONDecodeError:
                st.error("‚ùå JSON inv√°lido. Verifique a formata√ß√£o.")
            except requests.exceptions.ConnectionError:
                st.error("‚ùå N√£o foi poss√≠vel conectar √† API. Verifique se o servidor est√° rodando.")
            except Exception as e:
                st.error(f"‚ùå Erro inesperado: {str(e)}")
        else:
            st.warning("‚ö†Ô∏è Por favor, insira os dados do processo em JSON.")

# Se√ß√£o de exemplo
with st.expander("üìã Exemplo de JSON v√°lido"):
    st.code("""
{
    "numeroProcesso": "0001234-56.2023.4.05.8100",
    "classe": "Cumprimento de Senten√ßa",
    "orgaoJulgador": "19a VARA FEDERAL - SOBRAL/CE", 
    "esfera": "Federal",
    "valorCondenacao": 15000.00,
    "documentos": [
        {
            "id": "DOC-1",
            "nome": "Certid√£o de Tr√¢nsito em Julgado",
            "texto": "..."
        }
    ],
    "movimentos": []
}
""")

# Rodap√©
st.markdown("---")
st.markdown("*Desenvolvido para an√°lise automatizada de processos judiciais*")